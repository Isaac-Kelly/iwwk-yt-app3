{"version":3,"sources":["components/SearchBar.js","components/VideoItem.js","components/VideoList.js","components/VideoDetail.js","apis/youtube.js","hooks/useVideos.js","components/App.js","index.js"],"names":["SearchBar","onFormSubmit","useState","term","setTerm","className","onSubmit","event","preventDefault","type","value","onChange","target","VideoItem","video","onVideoSelect","onClick","src","snippet","thumbnails","medium","url","alt","title","VideoList","videos","renderedList","map","id","videoId","VideoDetail","videoSrc","description","axios","create","baseURL","params","part","maxResults","key","useVideos","defaultSearchTerm","setVideos","useEffect","searchVideos","a","youtube","get","q","response","data","items","App","selectedVideo","setSelectedVideo","ReactDOM","render","document","querySelector"],"mappings":"uKA6BeA,EA3BG,SAAC,GAAsB,IAApBC,EAAmB,EAAnBA,aACnB,EAAwBC,mBAAS,IAAjC,mBAAOC,EAAP,KAAaC,EAAb,KAUA,OACE,qBAAKC,UAAU,wBAAf,SACE,sBAAMC,SATO,SAACC,GAChBA,EAAMC,iBAGNP,EAAaE,IAKeE,UAAU,WAApC,SACE,sBAAKA,UAAU,QAAf,UACE,iDACA,uBACEI,KAAK,OACLC,MAAOP,EACPQ,SAAU,SAACJ,GAAD,OAAWH,EAAQG,EAAMK,OAAOF,kBCFvCG,G,MAfG,SAAC,GAA8B,IAA5BC,EAA2B,EAA3BA,MAAOC,EAAoB,EAApBA,cAC1B,OACE,sBAAKC,QAAS,kBAAMD,EAAcD,IAAQT,UAAU,kBAApD,UACE,qBACEA,UAAU,WACVY,IAAKH,EAAMI,QAAQC,WAAWC,OAAOC,IACrCC,IAAKR,EAAMI,QAAQK,QAErB,qBAAKlB,UAAU,UAAf,SACE,qBAAKA,UAAU,SAAf,SAAyBS,EAAMI,QAAQK,eCMhCC,EAdG,SAAC,GAA+B,IAA7BC,EAA4B,EAA5BA,OAAQV,EAAoB,EAApBA,cACrBW,EAAeD,EAAOE,KAAI,SAACb,GAC/B,OACE,cAAC,EAAD,CACEC,cAAeA,EAEfD,MAAOA,GADFA,EAAMc,GAAGC,YAMpB,OAAO,qBAAKxB,UAAU,0BAAf,SAA0CqB,KCMpCI,EApBK,SAAC,GAAe,IAAbhB,EAAY,EAAZA,MACrB,IAAKA,EACH,OAAO,wBAGT,IAAMiB,EAAQ,wCAAoCjB,EAAMc,GAAGC,SAE3D,OACE,gCACE,qBAAKxB,UAAU,WAAf,SACE,wBAAQkB,MAAM,eAAeN,IAAKc,MAEpC,sBAAK1B,UAAU,aAAf,UACE,oBAAIA,UAAU,YAAd,SAA2BS,EAAMI,QAAQK,QACzC,4BAAIT,EAAMI,QAAQc,qB,gCCZXC,E,OAAAA,EAAMC,OAAO,CAC1BC,QAAS,wCACTC,OAAQ,CACNC,KAAM,UACN5B,KAAM,QACN6B,WAAY,EACZC,IARQ,6CCuBGC,EAtBG,SAACC,GACjB,MAA4BvC,mBAAS,IAArC,mBAAOuB,EAAP,KAAeiB,EAAf,KAEAC,qBAAU,WACRC,EAAaH,KACZ,CAACA,IAIJ,IAAMG,EAAY,uCAAG,WAAOzC,GAAP,eAAA0C,EAAA,sEAEIC,EAAQC,IAAI,UAAW,CAC5CX,OAAQ,CACNY,EAAG7C,KAJY,OAEb8C,EAFa,OAOnBP,EAAUO,EAASC,KAAKC,OAPL,2CAAH,sDAUlB,MAAO,CAAC1B,EAAQmB,ICmBHQ,EAnCH,WACV,MAA0ClD,mBAAS,MAAnD,mBAAOmD,EAAP,KAAsBC,EAAtB,KACA,EAA+Bd,EAAU,eAAzC,mBAAOf,EAAP,KAAemB,EAAf,KAMA,OAJAD,qBAAU,WACRW,EAAiB7B,EAAO,MACvB,CAACA,IAGF,gCACE,qBAAKpB,UAAU,2BAAf,SACE,qBAAKA,UAAU,eAAf,SACE,oBAAIA,UAAU,YAAd,uCAGJ,sBAAKA,UAAU,eAAf,UACE,cAAC,EAAD,CAAWJ,aAAc2C,IACzB,qBAAKvC,UAAU,UAAf,SACE,sBAAKA,UAAU,SAAf,UACE,qBAAKA,UAAU,qBAAf,SACE,cAAC,EAAD,CAAaS,MAAOuC,MAGtB,sBAAKhD,UAAU,mBAAf,UACE,cAAC,EAAD,CAAWU,cAAeuC,EAAkB7B,OAAQA,IAAW,mBC1B7E8B,IAASC,OAAO,cAAC,EAAD,IAASC,SAASC,cAAc,Y","file":"static/js/main.16e55acb.chunk.js","sourcesContent":["import React, { useState } from \"react\";\r\n\r\nconst SearchBar = ({ onFormSubmit }) => {\r\n  const [term, setTerm] = useState(\"\");\r\n\r\n  // any time the user hits enter, this prevents the deault action of refreshing the page\r\n  const onSubmit = (event) => {\r\n    event.preventDefault();\r\n\r\n    // Make sure we call callback from parent component\r\n    onFormSubmit(term);\r\n  };\r\n\r\n  return (\r\n    <div className='search-bar ui segment'>\r\n      <form onSubmit={onSubmit} className=' ui form'>\r\n        <div className='field'>\r\n          <label>Video Search</label>\r\n          <input\r\n            type='text'\r\n            value={term}\r\n            onChange={(event) => setTerm(event.target.value)}\r\n          />\r\n        </div>\r\n      </form>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default SearchBar;\r\n","import React from \"react\";\r\nimport \"./VideoItem.css\";\r\n\r\n// destructured line 4\r\nconst VideoItem = ({ video, onVideoSelect }) => {\r\n  return (\r\n    <div onClick={() => onVideoSelect(video)} className='video-item item'>\r\n      <img\r\n        className='ui image'\r\n        src={video.snippet.thumbnails.medium.url}\r\n        alt={video.snippet.title}\r\n      />\r\n      <div className='content'>\r\n        <div className='header'>{video.snippet.title}</div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default VideoItem;\r\n","import React from \"react\";\r\nimport VideoItem from \"./VideoItem\";\r\n\r\n// line 4 says { videos, onVideoSelect } because we *destructured the props object to\r\n// save time in the subsequent lines\r\nconst VideoList = ({ videos, onVideoSelect }) => {\r\n  const renderedList = videos.map((video) => {\r\n    return (\r\n      <VideoItem\r\n        onVideoSelect={onVideoSelect}\r\n        key={video.id.videoId}\r\n        video={video}\r\n      />\r\n    );\r\n  });\r\n\r\n  return <div className='ui relaxed divided list'>{renderedList}</div>;\r\n};\r\n\r\nexport default VideoList;\r\n","import React from \"react\";\r\n\r\nconst VideoDetail = ({ video }) => {\r\n  if (!video) {\r\n    return <div></div>;\r\n  }\r\n\r\n  const videoSrc = `https://www.youtube.com/embed/${video.id.videoId}`;\r\n\r\n  return (\r\n    <div>\r\n      <div className='ui embed'>\r\n        <iframe title='video player' src={videoSrc} />\r\n      </div>\r\n      <div className='ui segment'>\r\n        <h4 className='ui header'>{video.snippet.title}</h4>\r\n        <p>{video.snippet.description}</p>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default VideoDetail;\r\n","import axios from \"axios\";\r\n\r\nconst KEY = \"AIzaSyDp-a6HXzVFXHl7CJTbwDwXIn74P-MkfrA\";\r\n\r\nexport default axios.create({\r\n  baseURL: \"https://www.googleapis.com/youtube/v3\",\r\n  params: {\r\n    part: \"snippet\",\r\n    type: \"video\",\r\n    maxResults: 5,\r\n    key: KEY,\r\n  },\r\n});\r\n","import { useState, useEffect } from \"react\";\r\nimport youtube from \"../apis/youtube\";\r\n\r\nconst useVideos = (defaultSearchTerm) => {\r\n  const [videos, setVideos] = useState([]);\r\n\r\n  useEffect(() => {\r\n    searchVideos(defaultSearchTerm);\r\n  }, [defaultSearchTerm]);\r\n\r\n  // Remember, interacting with an API is an asynchronus opperation, which means\r\n  // we have to either use the promises or async await syntax\r\n  const searchVideos = async (term) => {\r\n    // This API querry will return a data object with a ton of sub-objects\r\n    const response = await youtube.get(\"/search\", {\r\n      params: {\r\n        q: term,\r\n      },\r\n    });\r\n    setVideos(response.data.items);\r\n  };\r\n\r\n  return [videos, searchVideos];\r\n};\r\n\r\nexport default useVideos;\r\n","import React, { useState, useEffect } from \"react\";\r\nimport SearchBar from \"./SearchBar\";\r\nimport VideoList from \"./VideoList\";\r\nimport VideoDetail from \"./VideoDetail\";\r\nimport useVideos from \"../hooks/useVideos\";\r\n\r\nconst App = () => {\r\n  const [selectedVideo, setSelectedVideo] = useState(null);\r\n  const [videos, searchVideos] = useVideos(\"Learn React\");\r\n\r\n  useEffect(() => {\r\n    setSelectedVideo(videos[0]);\r\n  }, [videos]);\r\n\r\n  return (\r\n    <div>\r\n      <div className='style-scope ytd-masthead'>\r\n        <div className='ui container'>\r\n          <h1 className='ui header'>Welcome to my Youtube</h1>\r\n        </div>\r\n      </div>\r\n      <div className='ui container'>\r\n        <SearchBar onFormSubmit={searchVideos} />\r\n        <div className='ui grid'>\r\n          <div className='ui row'>\r\n            <div className='eleven wide column'>\r\n              <VideoDetail video={selectedVideo} />\r\n            </div>\r\n\r\n            <div className='five wide column'>\r\n              <VideoList onVideoSelect={setSelectedVideo} videos={videos} />{\" \"}\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n// on line 46, onVideoSelect={setSelectedVideo} is the same as\r\n//  onVideoSelect={(video) => setSelectedVideo(video)}\r\n\r\nexport default App;\r\n","import React from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\nimport App from \"./components/App\";\r\n\r\nReactDOM.render(<App />, document.querySelector(\"#root\"));\r\n"],"sourceRoot":""}